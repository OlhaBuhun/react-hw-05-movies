{"version":3,"file":"static/js/965.f7ab85d4.chunk.js","mappings":"iLAEAA,EAAAA,EAAMC,SAASC,QAAU,+BAEzBF,EAAAA,EAAMC,SAASE,OAAS,CACtBC,QAAS,oCAGJ,MAAMC,EAAqBC,gBACTN,EAAAA,EAAMO,IAAI,uBAEjBC,KAGLC,EAAcH,gBACFN,EAAAA,EAAMO,IAAI,sBAADG,OAAuBC,KAEvCH,KAGLI,EAAoBN,gBACRN,EAAAA,EAAMO,IAAI,SAADG,OAAUG,KAE1BL,I,sDClBlB,MAcA,EAdkBM,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,OACEE,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGF,EAAOG,KAAIC,IAAA,IAAC,MAAEC,EAAK,GAAEP,GAAIM,EAAA,OACxBH,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,GAAE,WAAAZ,OAAaG,GAAKI,SAAEG,KADrBP,EAEJ,OAGL,C,sGCbH,MAAMU,EAAkBC,EAAAA,GAAOC,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2bAqB/BC,EAAmBJ,EAAAA,GAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gKAU9BI,EAAmBP,EAAAA,GAAOQ,OAAMC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qZAkBhCO,EAAkBV,EAAAA,GAAOW,MAAKC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,gP,aC1C3C,MAqBA,EArBmBb,IAAoC,IAAnC,MAAEuB,EAAK,SAAEC,EAAQ,SAAEC,GAAUzB,EAC/C,OACEE,EAAAA,EAAAA,KAACO,EAAe,CAAAN,UACduB,EAAAA,EAAAA,MAACZ,EAAgB,CAACW,SAAUA,EAAStB,SAAA,EACnCD,EAAAA,EAAAA,KAACkB,EAAe,CACdO,KAAK,OACLC,YAAY,kBACZC,KAAK,QACLN,MAAOA,EACPC,SAAUA,KAEZtB,EAAAA,EAAAA,KAACe,EAAgB,CAACU,KAAK,SAAQxB,UAC7BD,EAAAA,EAAAA,KAAA,QAAAC,UACED,EAAAA,EAAAA,KAAC4B,EAAAA,IAAyB,CAACC,KAAK,eAItB,E,8BCnBP,SAASC,IAAU,IAADC,EAC/B,MAAOpC,EAAOqC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BlC,EAAQmC,IAAaD,EAAAA,EAAAA,UAAS,KAC9BE,EAAWC,IAAgBH,EAAAA,EAAAA,WAAS,IACpCI,EAAcC,IAAmBC,EAAAA,EAAAA,MAElCC,EAAuC,QAA5BT,EAAGM,EAAa9C,IAAI,gBAAQ,IAAAwC,EAAAA,EAAI,GAoCjD,OAvBAU,EAAAA,EAAAA,YAAU,KACmB,KAAvBD,EAAYE,OAKhBpD,iBACE,IACE8C,GAAa,GAEb,MAAM,QAAEO,SAAkBlD,EAAAA,EAAAA,IAAY+C,GACtCN,EAAUS,EACZ,CAAE,MAAOC,GACPC,EAAAA,GAAMD,MACJ,6DAEJ,CAAC,QACCR,GAAa,EACf,CACF,CACAU,GAlBED,EAAAA,GAAMD,MAAM,gEAkBE,GACf,CAACJ,KAGFhB,EAAAA,EAAAA,MAAA,OAAAvB,SAAA,EACED,EAAAA,EAAAA,KAAC+C,EAAU,CACT1B,MAAO1B,EACP2B,SAtCmB0B,IACvBhB,EAASgB,EAAMC,cAAc5B,MAAM6B,cAAc,EAsC7C3B,SAnCeyB,IACnBA,EAAMG,iBAENb,EAAgB,CAAE3C,MAAOA,IACzBqC,EAAS,GAAG,IAiCTG,IAAanC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,gBAMjBD,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACrD,OAAQA,MAGzB,C","sources":["api.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'http://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: '46c0be6b49bf7596a38fb0fb781b3647',\n};\n\nexport const fetchTrendingMovie = async () => {\n  const response = await axios.get('trending/movie/day');\n\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`search/movie?query=${query}`);\n\n  return response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`);\n\n  return response.data;\n};\n\nexport const fetchCastMovie = async id => {\n  const response = await axios.get(`movie/${id}/credits`);\n\n  return response.data;\n};\n\nexport const fetchReviewsMovie = async id => {\n  const response = await axios.get(`movie/${id}/reviews`);\n\n  return response.data;\n};\n","/* eslint-disable react/prop-types */\n\nimport { Link } from 'react-router-dom';\n\n// eslint-disable-next-line react/prop-types\nconst MovieList = ({ movies }) => {\n  return (\n    <div>\n      <ul>\n        {movies.map(({ title, id }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`}>{title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const SearchbarStyled = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow:\n    0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchFormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { HiDocumentMagnifyingGlass } from 'react-icons/hi2';\nimport {\n  SearchFormButton,\n  SearchFormInput,\n  SearchFormStyled,\n  SearchbarStyled,\n} from './SearchForm.styled';\n\n// eslint-disable-next-line react/prop-types\nconst SearchForm = ({ value, onChange, onSubmit }) => {\n  return (\n    <SearchbarStyled>\n      <SearchFormStyled onSubmit={onSubmit}>\n        <SearchFormInput\n          type=\"text\"\n          placeholder=\"Search movie...\"\n          name=\"value\"\n          value={value}\n          onChange={onChange}\n        />\n        <SearchFormButton type=\"submit\">\n          <span>\n            <HiDocumentMagnifyingGlass size=\"40\" />\n          </span>\n        </SearchFormButton>\n      </SearchFormStyled>\n    </SearchbarStyled>\n  );\n};\n\nexport default SearchForm;\n","import { searchMovie } from 'api';\nimport MovieList from 'components/MovieList/MovieList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [query, setQueru] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieSearch = searchParams.get('query') ?? '';\n\n  const handleNameChange = event => {\n    setQueru(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams({ query: query });\n    setQueru('');\n  };\n\n  useEffect(() => {\n    if (movieSearch.trim() === '') {\n      toast.error('Щось напиши');\n      return;\n    }\n\n    async function getSearchMovie() {\n      try {\n        setIsLoading(true);\n\n        const { results } = await searchMovie(movieSearch);\n        setMovies(results);\n      } catch (error) {\n        toast.error(\n          'Opps! Somathing went wrong! Please try reloading this page'\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getSearchMovie();\n  }, [movieSearch]);\n\n  return (\n    <div>\n      <SearchForm\n        value={query}\n        onChange={handleNameChange}\n        onSubmit={handleSubmit}\n      />\n      {isLoading && <b>Loding ...</b>}\n      {/* <ul>\n        {movies.map(({ title, id }) => (\n          <li key={id}>{title}</li>\n        ))}\n      </ul> */}\n      <MovieList movies={movies} />\n    </div>\n  );\n}\n"],"names":["axios","defaults","baseURL","params","api_key","fetchTrendingMovie","async","get","data","searchMovie","concat","query","fetchMovieDetails","id","_ref","movies","_jsx","children","map","_ref2","title","Link","to","SearchbarStyled","styled","header","_templateObject","_taggedTemplateLiteral","SearchFormStyled","form","_templateObject2","SearchFormButton","button","_templateObject3","SearchFormInput","input","_templateObject4","value","onChange","onSubmit","_jsxs","type","placeholder","name","HiDocumentMagnifyingGlass","size","Movies","_searchParams$get","setQueru","useState","setMovies","isLoading","setIsLoading","searchParams","setSearchParams","useSearchParams","movieSearch","useEffect","trim","results","error","toast","getSearchMovie","SearchForm","event","currentTarget","toLowerCase","preventDefault","MovieList"],"sourceRoot":""}