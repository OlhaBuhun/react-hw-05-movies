{"version":3,"file":"static/js/913.88a9f18e.chunk.js","mappings":"2OAYA,MAAMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAeE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAQnB,SAASC,IAAgB,IAADC,EAAAC,EACrC,MAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAA0C,QAA9BJ,EAAwB,QAAxBC,GADFI,EAAAA,EAAAA,QAAOH,GACMI,QAAQC,aAAK,IAAAN,OAAA,EAArBA,EAAuBO,YAAI,IAAAR,EAAAA,EAAI,KAE7CS,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,OAC3C,QAAEC,IAAYC,EAAAA,EAAAA,KAgBpB,IAdAC,EAAAA,EAAAA,YAAU,MACRC,iBACE,IACE,MAAMC,QAAqBC,EAAAA,EAAAA,IAAkBL,GAC7CF,EAAgBM,EAClB,CAAE,MAAOE,GACPC,EAAAA,GAAMD,MACJ,6DAEJ,CACF,CACAE,EAAiB,GAChB,CAACR,KAECH,EAAc,OAEnB,MAAM,MAAEY,EAAK,YAAEC,EAAW,aAAEC,EAAY,aAAEC,EAAY,SAAEC,EAAQ,OAAEC,GAChEjB,EAEIkB,EAASL,GAAW,iCAAAM,OAAqCN,GACzDO,EAAON,GAAgBA,EAAaO,MAAM,EAAG,GAC7CC,EAASP,GAAgBQ,KAAKC,MAAqB,GAAfT,GAE1C,OACEU,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAIlC,EAAa+B,UACrBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAELD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKG,IAAKZ,EAAQa,IAAKnB,EAAOoB,MAAM,SACpCP,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGd,EAAM,KAAGQ,EAAK,QAEjBO,EAAAA,EAAAA,KAAA,KAAAD,SAAIV,KACJS,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,eAAaJ,EAAO,QACxBK,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIT,GAAUA,EAAOgB,KAAIC,GAASA,EAAMC,OAAMC,KAAK,YAErDX,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAC1C,EAAU,CAAC4C,GAAG,OAAMH,SAAC,YAExBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAC1C,EAAU,CAAC4C,GAAG,UAASH,SAAC,kBAG7BC,EAAAA,EAAAA,KAACU,EAAAA,GAAM,MAGb,C","sources":["pages/MovieDetails.js"],"sourcesContent":["import { fetchMovieDetails } from 'api';\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(NavLink)`\n  color: blue;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const linkRef = useRef(location);\n  const backLinkHref = linkRef.current.state?.from ?? '/';\n\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovieDetalis() {\n      try {\n        const fetchDetails = await fetchMovieDetails(movieId);\n        setMovieDetails(fetchDetails);\n      } catch (error) {\n        toast.error(\n          'Opps! Somathing went wrong! Please try reloading this page'\n        );\n      }\n    }\n    getMovieDetalis();\n  }, [movieId]);\n\n  if (!movieDetails) return;\n\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movieDetails;\n\n  const poster = poster_path && `http://image.tmdb.org/t/p/w342${poster_path}`;\n  const date = release_date && release_date.slice(0, 4);\n  const rating = vote_average && Math.round(vote_average * 10);\n\n  return (\n    <div>\n      <Link to={backLinkHref}>\n        <b>Go back</b>\n      </Link>\n      <div>\n        <img src={poster} alt={title} width=\"240\" />\n        <h1>\n          {title} ({date})\n        </h1>\n        <p>{overview}</p>\n        <h2>user Score: {rating}%</h2>\n        <h2>Genres</h2>\n        <p>{genres && genres.map(genre => genre.name).join(', ')}</p>\n      </div>\n      <ul>\n        <li>\n          <StyledLink to=\"cast\">cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\">reviews</StyledLink>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n}\n"],"names":["StyledLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","MovieDetails","_linkRef$current$stat","_linkRef$current$stat2","location","useLocation","backLinkHref","useRef","current","state","from","movieDetails","setMovieDetails","useState","movieId","useParams","useEffect","async","fetchDetails","fetchMovieDetails","error","toast","getMovieDetalis","title","poster_path","release_date","vote_average","overview","genres","poster","concat","date","slice","rating","Math","round","_jsxs","children","_jsx","Link","to","src","alt","width","map","genre","name","join","Outlet"],"sourceRoot":""}